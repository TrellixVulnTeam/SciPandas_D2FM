<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from melt().sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="melt()" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>melt()</refname>
    <refpurpose>Unpivot a DataFrame from wide to long format, optionally leaving identifiers set.</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Syntax</title>
   <synopsis>
   pd.melt(df, id_vars=['A'], value_vars=['B'])
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
        <varlistentry>
            <term>id_vars:</term>
            <listitem><para> tuple, list, or ndarray, optional</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>value_vars:</term>
            <listitem><para> tuple, list, or ndarray, optional</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>var_name:</term>
            <listitem><para> scalar</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>value_name:</term>
            <listitem><para> scalar, default ‘value’</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>For additional information on parameters, See https:</term>
            <listitem><para>//pandas.pydata.org/pandas-docs/stable/reference/api/pandas.melt.html</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>Returns :</term>
            <listitem><para> DataFrame</para></listitem>
        </varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
If we want to join using the key columns, we need to set key to be the index in both df and other. The joined DataFrame will have key as its index.
df.join(other, lsuffix='_caller', rsuffix='_other')
   ]]></programlisting>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Aditya Dhinavahi</member>
   <member>Sundeep Akella</member>
   </simplelist>
</refsection>
</refentry>
