// Copyright (C) 2008 - INRIA
// Copyright (C) 2009 - DIGITEO

// This file is released under the 3-clause BSD license. See COPYING-BSD.

function scipandaslib = startModule()

    TOOLBOX_NAME  = "scipandas";
    TOOLBOX_TITLE = "SciPandas";

  mprintf("Start " + TOOLBOX_TITLE + "\n");

  if isdef("scipandaslib") then
    warning("SciPandas library is already loaded");
    return;
  end

  etc_tlbx  = get_absolute_file_path("scipandas.start");
  etc_tlbx  = getshortpathname(etc_tlbx);
  root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

//Load  functions library
// =============================================================================
  mprintf("\tLoad macros\n");
  pathmacros = pathconvert( root_tlbx ) + "macros" + filesep();
  scipandaslib = lib(pathmacros);

// load gateways and Java libraries
// =============================================================================
  verboseMode = ilib_verbose();
  ilib_verbose(0);
  mprintf("\tLoad gateways\n");
  link(root_tlbx + "/python/python38.dll");
  link(root_tlbx + "/src/cpp/libPyVar.dll");
  link(root_tlbx + "/src/c/libPythonInstance.dll");
  exec(pathconvert(root_tlbx+"/sci_gateway/loader_gateway.sce",%f));
  ilib_verbose(verboseMode);

// load localization
  addlocalizationdomain(TOOLBOX_NAME, root_tlbx + "/locales");

// Load and add help chapter
// =============================================================================
  if or(getscilabmode() == ["NW";"STD"]) then
    mprintf("\tLoad help\n");
    path_addchapter = pathconvert(root_tlbx+"/jar");
    if isdir(path_addchapter) then
      add_help_chapter(TOOLBOX_NAME, path_addchapter, %F);
    end
  end


endfunction

scipandaslib = startModule();
clear startModule; // remove startModule on stack
